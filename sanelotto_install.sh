#!/usr/bin/env python3

import os
import base64
import zipfile

archive = b"""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"""

# installing
def install():
    # dir for installing
    install_dir = '/usr/share/'

    # access check
    if not os.access('/usr/local/bin', os.W_OK) or not os.access(install_dir, os.W_OK):
        print('[\033[91mERROR\033[0m] Permission denied')
        return False

    # install check
    if os.access(install_dir + '/Sanelotto', os.F_OK):
        print('[\033[91mERROR\033[0m] Sanelotto already installed')
        return False

    # creating main dir
    try:
        os.mkdir(install_dir + '/Sanelotto')
        print('[\033[92mOK\033[0m] Directory created')
    except:
        print('[\033[91mERROR\033[0m] Failed to create /usr/share/Sanelotto')
        return False

    # unpacking
    try:
        # creating
        temp_archive = open(install_dir + '/Sanelotto/temp_sl.zip', 'wb')
        temp_archive.write(base64.decodebytes(archive))
        temp_archive.close()
        # extracting
        temp_archive_obj = zipfile.ZipFile(install_dir + '/Sanelotto/temp_sl.zip', 'r')
        temp_archive_obj.extractall(install_dir + '/Sanelotto')
        # deleting temp archive
        os.remove(install_dir + '/Sanelotto/temp_sl.zip')
        print('[\033[92mOK\033[0m] Sanelotto extracted')
    except:
        print('[\033[91mERROR\033[0m] Failed to unpack Sanelotto')
        return False

    # creating link
    try:
        os.symlink(install_dir + '/Sanelotto/sanelotto', '/usr/local/bin/sanelotto')
        os.chmod('/usr/local/bin/sanelotto', 0o777)
        print('[\033[92mOK\033[0m] Link created')
    except:
        print('[\033[91mERROR\033[0m] Failed to create symlink')
        return False

    print('[\033[92mDONE\033[0m] Sanelotto successfully installed')

# start
install()