#!/usr/bin/env python3

import os
import base64
import zipfile

archive = b"""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
AwAAUEsFBgAAAAARABEAwQUAAHEfAAAAAA=="""

# installing
def install():
    # dir for installing
    install_dir = '/usr/share/'

    # access check
    if not os.access('/usr/local/bin', os.W_OK) or not os.access(install_dir, os.W_OK):
        print('[\033[91mERROR\033[0m] Permission denied')
        return False

    # install check
    if os.access(install_dir + '/Sanelotto', os.F_OK):
        print('[\033[91mERROR\033[0m] Sanelotto already installed')
        return False

    # creating main dir
    try:
        os.mkdir(install_dir + '/Sanelotto')
        print('[\033[92mOK\033[0m] Directory created')
    except:
        print('[\033[91mERROR\033[0m] Failed to create /usr/share/Sanelotto')
        return False

    # unpacking
    try:
        # creating
        temp_archive = open(install_dir + '/Sanelotto/temp_sl.zip', 'wb')
        temp_archive.write(base64.decodebytes(archive))
        temp_archive.close()
        # extracting
        temp_archive_obj = zipfile.ZipFile(install_dir + '/Sanelotto/temp_sl.zip', 'r')
        temp_archive_obj.extractall(install_dir + '/Sanelotto')
        # deleting temp archive
        os.remove(install_dir + '/Sanelotto/temp_sl.zip')
        print('[\033[92mOK\033[0m] Sanelotto extracted')
    except:
        print('[\033[91mERROR\033[0m] Failed to unpack Sanelotto')
        return False

    # creating link
    try:
        os.symlink(install_dir + '/Sanelotto/sanelotto', '/usr/local/bin/sanelotto')
        os.chmod('/usr/local/bin/sanelotto', 0o777)
        print('[\033[92mOK\033[0m] Link created')
    except:
        print('[\033[91mERROR\033[0m] Failed to create symlink')
        return False

    print('[\033[92mDONE\033[0m] Sanelotto successfully installed')

# start
install()