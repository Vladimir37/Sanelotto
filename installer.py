import os
import base64
import zipfile

archive = b"""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"""

# installing
def install():
    # home dir
    try:
        home_dir = os.path.expanduser('~' + os.environ["SUDO_USER"])
    except:
        home_dir = os.path.expanduser('~')

    # access check
    if not os.access('/usr/local/bin', os.W_OK) or not os.access(home_dir, os.W_OK):
        print('[\033[91mERROR\033[0m] Permission denied')
        return False

    # install check
    if os.access(home_dir + '/.Sanelotto', os.F_OK):
        print('[\033[91mERROR\033[0m] Sanelotto already installed')
        return False

    # creating main dir
    try:
        os.mkdir(home_dir + '/.Sanelotto')
        print('[\033[92mOK\033[0m] Directory created')
    except:
        print('[\033[91mERROR\033[0m] Failed to create ~/.Sanelotto')
        return False

    # unpacking
    try:
        # creating
        temp_archive = open(home_dir + '/.Sanelotto/temp_sl.zip', 'wb')
        temp_archive.write(base64.decodebytes(archive))
        temp_archive.close()
        # extracting
        temp_archive_obj = zipfile.ZipFile(home_dir + '/.Sanelotto/temp_sl.zip', 'r')
        temp_archive_obj.extractall(home_dir + '/.Sanelotto')
        # deleting temp archive
        os.remove(home_dir + '/.Sanelotto/temp_sl.zip')
        print('[\033[92mOK\033[0m] Sanelotto extracted')
    except:
        print('[\033[91mERROR\033[0m] Failed to unpack Sanelotto')
        return False

    # creating link
    try:
        os.symlink(home_dir + '/.Sanelotto/sanelotto', '/usr/local/bin/sanelotto')
        os.chmod('/usr/local/bin/sanelotto', 0o777)
        print('[\033[92mOK\033[0m] Link created')
    except:
        print('[\033[91mERROR\033[0m] Failed to create symlink')
        return False

    print('[\033[92mDONE\033[0m] Sanelotto successfully installed')

# start
install()